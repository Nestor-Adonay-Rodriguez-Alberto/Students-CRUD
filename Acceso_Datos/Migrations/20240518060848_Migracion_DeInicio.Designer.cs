// <auto-generated />
using System;
using Acceso_Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Acceso_Datos.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20240518060848_Migracion_DeInicio")]
    partial class Migracion_DeInicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entidades.Estudiante", b =>
                {
                    b.Property<int>("Id_Estudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Estudiante"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradoAcademico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdMateriaEnEstudiante")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Estudiante");

                    b.HasIndex("IdMateriaEnEstudiante");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Entidades.Materia", b =>
                {
                    b.Property<int>("Id_Materia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Materia"), 1L, 1);

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("IdProfesorEnMateria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Materia");

                    b.HasIndex("IdProfesorEnMateria");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("Entidades.Profesor", b =>
                {
                    b.Property<int>("Id_Profesor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Profesor"), 1L, 1);

                    b.Property<int>("Aula")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Fotografia")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradoAcademico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRolEnProfesor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Sueldo")
                        .HasColumnType("float");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Profesor");

                    b.HasIndex("IdRolEnProfesor");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("Entidades.Rol", b =>
                {
                    b.Property<int>("Id_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Rol"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Entidades.Estudiante", b =>
                {
                    b.HasOne("Entidades.Materia", "Objeto_Materia")
                        .WithMany("Lista_Estudiantes")
                        .HasForeignKey("IdMateriaEnEstudiante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objeto_Materia");
                });

            modelBuilder.Entity("Entidades.Materia", b =>
                {
                    b.HasOne("Entidades.Profesor", "Objeto_Profesor")
                        .WithMany("Lista_Materia")
                        .HasForeignKey("IdProfesorEnMateria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objeto_Profesor");
                });

            modelBuilder.Entity("Entidades.Profesor", b =>
                {
                    b.HasOne("Entidades.Rol", "Objeto_Rol")
                        .WithMany("Lista_Profesores")
                        .HasForeignKey("IdRolEnProfesor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objeto_Rol");
                });

            modelBuilder.Entity("Entidades.Materia", b =>
                {
                    b.Navigation("Lista_Estudiantes");
                });

            modelBuilder.Entity("Entidades.Profesor", b =>
                {
                    b.Navigation("Lista_Materia");
                });

            modelBuilder.Entity("Entidades.Rol", b =>
                {
                    b.Navigation("Lista_Profesores");
                });
#pragma warning restore 612, 618
        }
    }
}
